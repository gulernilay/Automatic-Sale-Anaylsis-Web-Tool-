import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import matplotlib.ticker as mticker
import pandas as pd

def ay_bazli_satis_analizi(df: pd.DataFrame, selected_year: int = None) -> None:
    """
    Belirli bir yÄ±l iÃ§in ayÄ±n farklÄ± dÃ¶nemlerindeki (baÅŸ, orta, son) toplam satÄ±ÅŸlarÄ± analiz eder ve gÃ¶rselleÅŸtirir.

    Args:
        df (pd.DataFrame): SatÄ±ÅŸ verilerini iÃ§eren DataFrame. 'Year', 'Date' ve 'Sale_Amount' sÃ¼tunlarÄ±nÄ± iÃ§ermelidir.
        selected_year (int, optional): Analiz yapÄ±lacak yÄ±l. Belirtilmezse kullanÄ±cÄ±dan seÃ§im istenir.

    Returns:
        None. SonuÃ§lar Streamlit arayÃ¼zÃ¼nde gÃ¶rselleÅŸtirilir ve tablo olarak sunulur.
    """
    st.header("Ay BazlÄ± DÃ¶nemsel SatÄ±ÅŸ Analizi")

    # YÄ±llarÄ± otomatik olarak listele
    available_years = sorted(df["Year"].dropna().unique(), reverse=True)

    # YÄ±l seÃ§imi
    year = selected_year if selected_year is not None else st.selectbox("Analiz yapÄ±lacak yÄ±lÄ± seÃ§iniz:", available_years)

    # SeÃ§ilen yÄ±l iÃ§in veriyi filtrele
    df_filtered = df[df["Year"] == year].copy()
    if df_filtered.empty:
        st.warning(f"{year} yÄ±lÄ±na ait veri bulunamadÄ±.")
        return

    # Tarihe gÃ¶re satÄ±ÅŸlarÄ± grupla ve ayÄ±n dÃ¶nemini etiketle
    sales_by_date = (
        df_filtered.groupby('Date', as_index=False)['Sale_Amount'].sum()
        .assign(
            Day=lambda x: x['Date'].dt.day,
            Period=lambda x: x['Day'].apply(
                lambda d: 'Ay BaÅŸÄ± (1-10)' if d <= 10 else ('Ay OrtasÄ± (11-20)' if d <= 20 else 'Ay Sonu (21-31)')
            )
        )
    )

    # DÃ¶neme gÃ¶re toplam satÄ±ÅŸlarÄ± hesapla
    period_sales = sales_by_date.groupby('Period', as_index=False)['Sale_Amount'].sum()

    # SonuÃ§larÄ± gÃ¶rselleÅŸtir
    fig, ax = plt.subplots(figsize=(10, 6))
    sns.barplot(data=period_sales, x='Period', y='Sale_Amount', ax=ax)
    ax.set_title(f'{year} YÄ±lÄ±nda Ay BazlÄ± DÃ¶nemsel SatÄ±ÅŸlar')
    ax.set_ylabel('Toplam SatÄ±ÅŸ Adedi')
    ax.set_xlabel('AyÄ±n DÃ¶nemi')
    ax.yaxis.set_major_formatter(mticker.StrMethodFormatter('{x:,.0f}'))
    ax.grid(axis='y')
    plt.tight_layout()

    # Grafik ve tabloyu gÃ¶ster
    st.pyplot(fig)
    st.markdown("### ğŸ“„ DÃ¶nem BazlÄ± SatÄ±ÅŸ Verisi")
    st.dataframe(period_sales)
